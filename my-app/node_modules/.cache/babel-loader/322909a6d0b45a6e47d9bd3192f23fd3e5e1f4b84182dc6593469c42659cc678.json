{"ast":null,"code":"import React,{useContext,useEffect,useState}from'react';import{Route,Routes}from'react-router-dom';import CreateTaskForm from'../components/CreateTasks';import AddDepartment from'../components/AddDepartment';import Dashboard from'../components/Dashboard';import ManagerDashboard from'../components/ManagerDashBoard';import{AuthContext}from'../context/Authentication';import UpdateUserForm from'../components/UpdateUser';import axios from'axios';import UpdateDepartmentForm from'../components/UpdateDepartment';import UpdateTaskForm from'../components/UpdateTasks';import UserForm from'../components/AddUsers';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const App=()=>{const{userData}=useContext(AuthContext);const[departments,setDepartments]=useState([]);useEffect(()=>{const fetchDepartments=async()=>{try{const response=await axios.get(\"/departments\");setDepartments(response.data);}catch(err){console.error('Error fetching employees');}};fetchDepartments();},[]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/dashboard\",element:userData?/*#__PURE__*/_jsx(Dashboard,{}):/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"})}),/*#__PURE__*/_jsx(Route,{path:\"/manager-dashboard\",element:userData?/*#__PURE__*/_jsx(ManagerDashboard,{departments:departments}):/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"})}),/*#__PURE__*/_jsx(Route,{path:\"/manager-departments\",element:/*#__PURE__*/_jsx(AddDepartment,{departments:departments})}),/*#__PURE__*/_jsx(Route,{path:\"/manager-users\",element:/*#__PURE__*/_jsx(UserForm,{departments:departments})}),/*#__PURE__*/_jsx(Route,{path:\"/manager-tasks\",element:/*#__PURE__*/_jsx(CreateTaskForm,{departments:departments})}),/*#__PURE__*/_jsx(Route,{path:\"/update user/:id\",element:/*#__PURE__*/_jsx(UpdateUserForm,{departments:departments})}),/*#__PURE__*/_jsx(Route,{path:\"/update department/:id\",element:/*#__PURE__*/_jsx(UpdateDepartmentForm,{departments:departments})}),/*#__PURE__*/_jsx(Route,{path:\"/update tasks/:id\",element:/*#__PURE__*/_jsx(UpdateTaskForm,{departments:departments})})]})});};export default App;","map":{"version":3,"names":["React","useContext","useEffect","useState","Route","Routes","CreateTaskForm","AddDepartment","Dashboard","ManagerDashboard","AuthContext","UpdateUserForm","axios","UpdateDepartmentForm","UpdateTaskForm","UserForm","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","userData","departments","setDepartments","fetchDepartments","response","get","data","err","console","error","children","path","element"],"sources":["/home/ngare/Development/code/User-System/my-app/src/navigation/AppStack.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState} from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport CreateTaskForm from '../components/CreateTasks';\nimport AddDepartment from '../components/AddDepartment';\nimport Dashboard from '../components/Dashboard';\nimport ManagerDashboard from '../components/ManagerDashBoard';\nimport { AuthContext } from '../context/Authentication';\nimport UpdateUserForm from '../components/UpdateUser';\nimport { Department } from '../types';\nimport axios from 'axios';\nimport UpdateDepartmentForm from '../components/UpdateDepartment';\nimport UpdateTaskForm from '../components/UpdateTasks';\nimport UserForm from '../components/AddUsers';\n\n\nconst App: React.FC = () => {\n    const {userData} = useContext(AuthContext)\n    const [departments, setDepartments] = useState<Department[]>([]);\n    \n\n  useEffect(() => {\n\n    const fetchDepartments = async () => {\n        \n        try {\n          const response = await axios.get<Department[]>(\"/departments\");\n          setDepartments(response.data);\n        } catch (err) {\n          console.error('Error fetching employees');\n        } \n      };\n\n    fetchDepartments();\n  }, []);\n  \n  return (\n    <>           \n        <Routes>\n          <Route\n            path=\"/dashboard\"\n            element={userData ? <Dashboard /> : <p>Loading...</p>}\n          />\n          <Route\n            path=\"/manager-dashboard\"\n            element={userData ? <ManagerDashboard departments = {departments}/> : <p>Loading...</p>}\n          />\n         \n            <Route path=\"/manager-departments\" element = {<AddDepartment departments = {departments}/>}></Route>\n            <Route path=\"/manager-users\" element = {<UserForm departments = {departments} />}></Route>\n            <Route path=\"/manager-tasks\" element = {<CreateTaskForm departments = {departments}/>}></Route>\n            <Route path=\"/update user/:id\" element = {<UpdateUserForm departments = {departments}/>} ></Route>\n            <Route path=\"/update department/:id\" element = {<UpdateDepartmentForm departments = {departments}/>} ></Route>\n            <Route path=\"/update tasks/:id\" element = {<UpdateTaskForm departments = {departments}/>} ></Route>\n    \n          \n        </Routes>\n\n        </>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}