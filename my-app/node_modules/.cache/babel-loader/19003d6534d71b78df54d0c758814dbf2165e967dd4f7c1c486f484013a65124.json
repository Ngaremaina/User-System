{"ast":null,"code":"var _jsxFileName = \"/home/ngare/Development/code/User-System/my-app/src/context/Authentication.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  isLoading: false,\n  loginUser: () => {},\n  logoutUser: () => {},\n  userToken: null,\n  userData: null\n});\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [userToken, setUserToken] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const navigate = useNavigate();\n  const loginUser = async (email, password) => {\n    setIsLoading(true);\n    try {\n      const res = await axios.post(\"/login\", {\n        email,\n        password\n      });\n      const userdata = res.data;\n      console.log(userdata);\n      setUserData(userdata);\n      setUserToken(userdata.access_token);\n      localStorage.setItem('userInfo', JSON.stringify(userdata));\n      localStorage.setItem('userToken', userdata.access_token);\n      navigate(userdata.is_manager ? '/manager-dashboard' : '/dashboard');\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const logoutUser = () => {\n    setUserToken(null);\n    localStorage.removeItem('userInfo');\n    localStorage.removeItem('userToken');\n    setIsLoading(false);\n    navigate(\"signin\");\n  };\n  const isLoggedIn = async () => {\n    try {\n      setIsLoading(true);\n      const usertoken = await localStorage.getItem('userToken');\n      const userinfo = await localStorage.getItem('userInfo');\n      if (userinfo) {\n        setUserToken(usertoken);\n        setUserData(JSON.parse(userinfo));\n      }\n      setIsLoading(false);\n    } catch (error) {\n      console.log(`isLogged in error ${error}`);\n    }\n  };\n  useEffect(() => {\n    isLoggedIn();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoading,\n      loginUser,\n      logoutUser,\n      userToken,\n      userData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"C8JuYide+kNO+5Ja3hBWI4r8ndE=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","axios","useNavigate","jsxDEV","_jsxDEV","AuthContext","isLoading","loginUser","logoutUser","userToken","userData","AuthProvider","children","_s","setIsLoading","setUserToken","setUserData","navigate","email","password","res","post","userdata","data","console","log","access_token","localStorage","setItem","JSON","stringify","is_manager","error","removeItem","isLoggedIn","usertoken","getItem","userinfo","parse","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ngare/Development/code/User-System/my-app/src/context/Authentication.tsx"],"sourcesContent":["import React, { createContext, useEffect, useState,ReactNode } from 'react';\nimport axios from \"axios\"\nimport { useNavigate } from 'react-router-dom';\n\ninterface UserData {\n  id: number;\n  username: string;\n  email: string;\n  is_manager: boolean;\n  access_token: string;\n}\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\ninterface AuthContextType {\n  isLoading: boolean;\n  loginUser: (email: string, password: string) => void;\n  logoutUser: () => void;\n  userToken: string | null;\n  userData: UserData | null;\n}\n\nconst AuthContext = createContext<AuthContextType>({\n  isLoading: false,\n  loginUser: () => {},\n  logoutUser: () => {},\n  userToken: null,\n  userData: null,\n});\n\nconst AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [userToken, setUserToken] = useState<string | null>(null)\n  const [userData, setUserData] = useState<UserData | null>(null);\n  const navigate = useNavigate();\n\n  const loginUser = async (email: string, password: string) => {\n    setIsLoading(true);\n    try {\n      const res = await axios.post(\"/login\", {\n        email,\n        password,\n      });\n      \n      const userdata: UserData = res.data;\n      console.log(userdata)\n      setUserData(userdata);\n      setUserToken(userdata.access_token);\n      \n      \n      localStorage.setItem('userInfo', JSON.stringify(userdata));\n      localStorage.setItem('userToken', userdata.access_token);\n      navigate(userdata.is_manager ? '/manager-dashboard' : '/dashboard');\n    } catch (error: any) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logoutUser = () => {\n    setUserToken(null)\n    localStorage.removeItem('userInfo')\n    localStorage.removeItem('userToken')\n    setIsLoading(false)\n    navigate(\"signin\")\n  }\n\n  const isLoggedIn = async () =>{\n    try{\n        setIsLoading(true)\n        const usertoken = await localStorage.getItem('userToken') \n        const userinfo = await localStorage.getItem('userInfo')\n        if (userinfo){\n            setUserToken(usertoken)\n            setUserData(JSON.parse(userinfo))\n        }\n        setIsLoading(false)\n    }\n    catch(error){\n        console.log(`isLogged in error ${error}`)\n    }\n  }\n\n  useEffect(() => {\n    isLoggedIn()\n  }, [])\n\n  return (\n    <AuthContext.Provider value={{ isLoading, loginUser, logoutUser, userToken, userData }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport { AuthContext, AuthProvider };\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}