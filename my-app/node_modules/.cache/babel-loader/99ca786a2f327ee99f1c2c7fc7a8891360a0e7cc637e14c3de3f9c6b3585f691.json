{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import Header from'./Header';import{useParams}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const UpdateUserForm=_ref=>{let{departments}=_ref;const{id}=useParams();const[formData,setFormData]=useState({username:'',email:'',password:'',is_manager:false,department_id:0});const[loading,setLoading]=useState(false);const[error,setError]=useState(null);useEffect(()=>{const fetchUserDetails=async()=>{try{const response=await axios.get(\"/users/\".concat(id));setFormData(response.data);}catch(error){console.error('Error fetching user details:',error);setError('Error fetching user details');}};fetchUserDetails();},[id]);const handleChange=event=>{const{name,value,type}=event.target;if(type==='checkbox'){setFormData(prevFormData=>({...prevFormData,[name]:event.target.checked}));}else{setFormData(prevFormData=>({...prevFormData,[name]:value}));}};const handleSubmit=async event=>{event.preventDefault();setLoading(true);setError(null);// Create an object with only the fields to be updated\nconst updatedData={username:formData.username,email:formData.email,is_manager:formData.is_manager,department_id:formData.department_id};// Only include password if it's not empty (indicating it should be updated)\nif(formData.password){updatedData.password=formData.password;}try{console.log('Submitting data:',updatedData);// Log the data being submitted\nawait axios.patch(\"/users/\".concat(id),updatedData);console.log('User updated successfully');// Optionally handle success (e.g., show success message, redirect)\n}catch(error){console.error('Error updating user:',error);if(error.response){console.error('Response data:',error.response.data);console.error('Response status:',error.response.status);console.error('Response headers:',error.response.headers);setError(\"Error updating user: \".concat(error.response.data.message||'Bad Request'));}else{setError('Error updating user');}}finally{setLoading(false);}window.location.reload();};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center mt-5 w-full\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-1/2 flex justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"block max-w-sm p-6 bg-white border border-gray-200 rounded-lg shadow hover:bg-gray-100 dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white\",children:/*#__PURE__*/_jsxs(\"strong\",{className:\"uppercase\",children:[\"Details of \",formData.username]})}),/*#__PURE__*/_jsxs(\"p\",{className:\"font-normal text-gray-700 dark:text-gray-400\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Name: \"}),formData.username]}),/*#__PURE__*/_jsxs(\"p\",{className:\"font-normal text-gray-700 dark:text-gray-400\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Email: \"}),formData.email]}),/*#__PURE__*/_jsxs(\"p\",{className:\"font-normal text-gray-700 dark:text-gray-400\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Role:\"}),\" \",formData.is_manager?\"Manager\":\"Employee\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"font-normal text-gray-700 dark:text-gray-400\",children:[\"Department: \",departments.map(department=>/*#__PURE__*/_jsx(\"strong\",{children:department.id===formData.department_id?\"\".concat(department.name):\"\"}))]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-1/2\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"flex justify-center mb-3 font-bold uppercase\",children:\"Update User\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"max-w-sm mx-auto\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"username\",className:\"block mb-2 text-sm font-medium text-gray-900\",children:\"Username:\"}),/*#__PURE__*/_jsx(\"input\",{className:\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\",type:\"text\",id:\"username\",name:\"username\",value:formData.username,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",className:\"block mb-2 text-sm font-medium text-gray-900\",children:\"Email Address:\"}),/*#__PURE__*/_jsx(\"input\",{className:\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\",type:\"email\",id:\"email\",name:\"email\",value:formData.email,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",className:\"block mb-2 text-sm font-medium text-gray-900\",children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{className:\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\",type:\"password\",id:\"password\",name:\"password\",value:formData.password,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"department_id\",className:\"block mb-2 text-sm font-medium text-gray-900\",children:\"Department:\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\",id:\"department_id\",name:\"department_id\",value:formData.department_id,onChange:handleChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a department\"}),departments.map(department=>/*#__PURE__*/_jsx(\"option\",{value:department.id,children:department.name},department.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center mb-4 mt-2\",children:[/*#__PURE__*/_jsx(\"input\",{id:\"is_manager\",name:\"is_manager\",type:\"checkbox\",checked:formData.is_manager,onChange:handleChange,className:\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"is_manager\",className:\"ml-2 text-sm font-medium text-gray-900 dark:text-gray-300\",children:\"Is Manager\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"mt-3 text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\",children:\"Update User\"})]}),loading&&/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500 mt-2\",children:error})]})]})]});};export default UpdateUserForm;","map":{"version":3,"names":["React","useState","useEffect","axios","Header","useParams","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","UpdateUserForm","_ref","departments","id","formData","setFormData","username","email","password","is_manager","department_id","loading","setLoading","error","setError","fetchUserDetails","response","get","concat","data","console","handleChange","event","name","value","type","target","prevFormData","checked","handleSubmit","preventDefault","updatedData","log","patch","status","headers","message","window","location","reload","children","className","map","department","onSubmit","htmlFor","onChange"],"sources":["/home/ngare/Development/code/User-System/my-app/src/components/UpdateUser.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Header from './Header';\nimport { useParams } from 'react-router-dom';\nimport { UserFormState, DepartmentsProps } from '../types';\n\nconst UpdateUserForm: React.FC<DepartmentsProps> = ({departments}) => {\n    const { id } = useParams<{ id: string }>();\n    \n    const [formData, setFormData] = useState<UserFormState>({\n        username: '',\n        email: '',\n        password: '',\n        is_manager: false,\n        department_id: 0,\n    });\n    \n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n\n    useEffect(() => {\n        const fetchUserDetails = async () => {\n            try {\n                const response = await axios.get<UserFormState>(`/users/${id}`);\n                setFormData(response.data);\n            } catch (error) {\n                console.error('Error fetching user details:', error);\n                setError('Error fetching user details');\n            }\n        };\n\n        fetchUserDetails();\n    }, [id]);\n\n\n    \n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n        const { name, value, type } = event.target;\n        if (type === 'checkbox') {\n            setFormData((prevFormData) => ({\n                ...prevFormData,\n                [name]: (event.target as HTMLInputElement).checked,\n            }));\n        } else {\n            setFormData((prevFormData) => ({\n                ...prevFormData,\n                [name]: value,\n            }));\n        }\n    };\n\n    const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault();\n        setLoading(true);\n        setError(null);\n\n        // Create an object with only the fields to be updated\n        const updatedData: Partial<UserFormState> = {\n            username: formData.username,\n            email: formData.email,\n            is_manager: formData.is_manager,\n            department_id: formData.department_id,\n        };\n\n        // Only include password if it's not empty (indicating it should be updated)\n        if (formData.password) {\n            updatedData.password = formData.password;\n        }\n\n        try {\n            console.log('Submitting data:', updatedData); // Log the data being submitted\n            await axios.patch(`/users/${id}`, updatedData);\n            console.log('User updated successfully');\n            // Optionally handle success (e.g., show success message, redirect)\n        } catch (error: any) {\n            console.error('Error updating user:', error);\n            if (error.response) {\n                console.error('Response data:', error.response.data);\n                console.error('Response status:', error.response.status);\n                console.error('Response headers:', error.response.headers);\n                setError(`Error updating user: ${error.response.data.message || 'Bad Request'}`);\n            } else {\n                setError('Error updating user');\n            }\n        } finally {\n            setLoading(false);\n        }\n\n        window.location.reload()\n        \n        \n    };\n\n    return (\n        <>\n            <Header />\n            <div className='flex justify-center mt-5 w-full'>\n                <div className='w-1/2 flex justify-center'>\n                    <div  className=\"block max-w-sm p-6 bg-white border border-gray-200 rounded-lg shadow hover:bg-gray-100 dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700\">\n                    <h5 className=\"mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white\"><strong className='uppercase'>Details of {formData.username}</strong></h5>\n                    <p className=\"font-normal text-gray-700 dark:text-gray-400\"><strong>Name: </strong>{formData.username}</p>\n                    <p className=\"font-normal text-gray-700 dark:text-gray-400\"><strong>Email: </strong>{formData.email}</p>\n                    <p className=\"font-normal text-gray-700 dark:text-gray-400\"><strong>Role:</strong> {formData.is_manager ? \"Manager\" : \"Employee\"}</p>\n                    <p className='font-normal text-gray-700 dark:text-gray-400'>Department: {departments.map((department) => (\n                        <strong>{department.id === formData.department_id ? `${department.name}` : \"\"}</strong>\n                    ))}\n                    </p>\n                    </div>\n                </div>\n\n            \n            <div className=\"w-1/2\">\n                <h2 className=\"flex justify-center mb-3 font-bold uppercase\">Update User</h2>\n                <form onSubmit={handleSubmit} className=\"max-w-sm mx-auto\">\n                    <div>\n                        <label htmlFor=\"username\" className=\"block mb-2 text-sm font-medium text-gray-900\">\n                            Username:\n                        </label>\n                        <input\n                            className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                            type=\"text\"\n                            id=\"username\"\n                            name=\"username\"\n                            value={formData.username}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor=\"email\" className=\"block mb-2 text-sm font-medium text-gray-900\">\n                            Email Address:\n                        </label>\n                        <input\n                            className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            value={formData.email}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor=\"password\" className=\"block mb-2 text-sm font-medium text-gray-900\">\n                            Password:\n                        </label>\n                        <input\n                            className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            value={formData.password}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor=\"department_id\" className=\"block mb-2 text-sm font-medium text-gray-900\">\n                            Department:\n                        </label>\n                        <select\n                            className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                            id=\"department_id\"\n                            name=\"department_id\"\n                            value={formData.department_id}\n                            onChange={handleChange}\n                        >\n                            <option value=\"\">Select a department</option>\n                            {departments.map((department) => (\n                                <option key={department.id} value={department.id}>\n                                    {department.name}\n                                </option>\n                            ))}\n                        </select>\n                    </div>\n                    <div className=\"flex items-center mb-4 mt-2\">\n                        <input\n                            id=\"is_manager\"\n                            name=\"is_manager\"\n                            type=\"checkbox\"\n                            checked={formData.is_manager}\n                            onChange={handleChange}\n                            className=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\n                        />\n                        <label htmlFor=\"is_manager\" className=\"ml-2 text-sm font-medium text-gray-900 dark:text-gray-300\">\n                            Is Manager\n                        </label>\n                    </div>\n                    <button\n                        type=\"submit\"\n                        className=\"mt-3 text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n                    >\n                        Update User\n                    </button>\n                </form>\n                {loading && <p>Loading...</p>}\n                {error && <p className=\"text-red-500 mt-2\">{error}</p>}\n            </div>\n\n            \n\n            </div>\n        </>\n    );\n};\n\nexport default UpdateUserForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}