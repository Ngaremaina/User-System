{"ast":null,"code":"import React,{useState,useEffect,useContext}from'react';import axios from'axios';import Header from'./Header';import{AuthContext}from'../context/Authentication';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{const{userData}=useContext(AuthContext);const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState('');useEffect(()=>{const fetchUserDetails=async()=>{setLoading(true);try{const response=await axios.get(\"/users/\".concat(userData===null||userData===void 0?void 0:userData.id));setUser(response.data);// Assuming API returns user object\n}catch(error){setError('Error fetching user details');}finally{setLoading(false);}};fetchUserDetails();},[]);if(loading)return/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"});if(error)return/*#__PURE__*/_jsx(\"p\",{children:error});if(!user)return/*#__PURE__*/_jsx(\"p\",{children:\"User not found\"});// Handle case when user is not fetched yet or not found\nconst UpdateTask=async(id,title,description,due_date,status)=>{// Create an object with only the fields to be updated\nconst updatedData={title:title,description:description,due_date:due_date,status:status,user_id:userData===null||userData===void 0?void 0:userData.id};console.log(updatedData);try{console.log('Submitting data:',updatedData);// Log the data being submitted\nawait axios.patch(\"/tasks/\".concat(id),updatedData);console.log('Task updated successfully');// Optionally handle success (e.g., show success message, redirect)\n}catch(error){console.error('Error updating task:',error);if(error.response){console.error('Response data:',error.response.data);console.error('Response status:',error.response.status);console.error('Response headers:',error.response.headers);setError(\"Error updating task: \".concat(error.response.data.message||'Bad Request'));}else{setError('Error updating task');}}finally{setLoading(false);}window.location.reload();};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"flex justify-center font-bold uppercase\",children:\"Task Board\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap justify-center mt-10 gap-4\",children:user.tasks.filter(task=>task.status.toLowerCase()!==\"done\").map(task=>/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-sm p-6 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 mb-3\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white\",children:task.title}),/*#__PURE__*/_jsxs(\"p\",{className:\"mb-3 font-normal text-gray-700 dark:text-gray-400\",children:[task.description,\".\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"mb-3 font-normal text-gray-700 dark:text-gray-400\",children:[task.due_date,\".\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"mb-3 font-normal text-gray-700 dark:text-gray-400\",children:[task.status,\".\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"focus:outline-none text-white bg-purple-700 hover:bg-purple-800 focus:ring-4 focus:ring-purple-300 font-medium rounded-lg text-sm px-5 py-2.5 mb-2 dark:bg-purple-600 dark:hover:bg-purple-700 dark:focus:ring-purple-900\",onClick:()=>UpdateTask(task.id,task.title,task.description,task.due_date,\"In progress\"),children:\"In Progress\"}),/*#__PURE__*/_jsx(\"button\",{className:\"focus:outline-none text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800\",onClick:()=>UpdateTask(task.id,task.title,task.description,task.due_date,\"Done\"),children:\"Done\"})]})]},task.id))}),/*#__PURE__*/_jsx(\"h2\",{className:\"flex justify-center font-bold uppercase\",children:\"Completed Tasks\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap justify-center mt-10 gap-4\",children:user.tasks.filter(task=>task.status.toLowerCase()===\"done\").map(task=>/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-sm p-6 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 mb-3\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white\",children:task.title}),/*#__PURE__*/_jsxs(\"p\",{className:\"mb-3 font-normal text-gray-700 dark:text-gray-400\",children:[task.description,\".\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"mb-3 font-normal text-gray-700 dark:text-gray-400\",children:[task.due_date,\".\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"mb-3 font-normal text-gray-700 dark:text-gray-400\",children:[task.status,\".\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"focus:outline-none text-white bg-purple-700 hover:bg-purple-800 focus:ring-4 focus:ring-purple-300 font-medium rounded-lg text-sm px-5 py-2.5 mb-2 dark:bg-purple-600 dark:hover:bg-purple-700 dark:focus:ring-purple-900\",onClick:()=>UpdateTask(task.id,task.title,task.description,task.due_date,\"In progress\"),children:\"In Progress\"}),/*#__PURE__*/_jsx(\"button\",{className:\"focus:outline-none text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800\",onClick:()=>UpdateTask(task.id,task.title,task.description,task.due_date,\"Done\"),children:\"Done\"})]})]},task.id))})]})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","Header","AuthContext","jsx","_jsx","jsxs","_jsxs","Dashboard","userData","user","setUser","loading","setLoading","error","setError","fetchUserDetails","response","get","concat","id","data","children","UpdateTask","title","description","due_date","status","updatedData","user_id","console","log","patch","headers","message","window","location","reload","className","tasks","filter","task","toLowerCase","map","onClick"],"sources":["/home/ngare/Development/code/User-System/my-app/src/components/Dashboard.tsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport Header from './Header';\nimport { UserData, TaskDetails } from '../types';\nimport { AuthContext } from '../context/Authentication';\n\n\nconst Dashboard: React.FC = () => {\n    const {userData} = useContext(AuthContext)\n    const [user, setUser] = useState<UserData | null>(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState('');\n   \n    useEffect(() => {\n\n        const fetchUserDetails = async () => {\n            setLoading(true);\n            try {\n                const response = await axios.get<UserData>(`/users/${userData?.id}`);\n                setUser(response.data); // Assuming API returns user object\n            } catch (error) {\n                setError('Error fetching user details');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchUserDetails();\n        \n\n\n    },[])\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>{error}</p>;\n\n    if (!user) return <p>User not found</p>; // Handle case when user is not fetched yet or not found\n\n\n    const UpdateTask = async (id: number, title: string, description: string, due_date: string, status: string) => {\n\n        // Create an object with only the fields to be updated\n        const updatedData: Partial<TaskDetails> = {\n            title: title,\n            description: description,\n            due_date: due_date,\n            status: status,\n            user_id: userData?.id,\n        };\n\n        console.log(updatedData)\n\n        try {\n            console.log('Submitting data:', updatedData); // Log the data being submitted\n            await axios.patch(`/tasks/${id}`, updatedData);\n            console.log('Task updated successfully');\n            // Optionally handle success (e.g., show success message, redirect)\n        } catch (error: any) {\n            console.error('Error updating task:', error);\n            if (error.response) {\n                console.error('Response data:', error.response.data);\n                console.error('Response status:', error.response.status);\n                console.error('Response headers:', error.response.headers);\n                setError(`Error updating task: ${error.response.data.message || 'Bad Request'}`);\n            } else {\n                setError('Error updating task');\n            }\n        } finally {\n            setLoading(false);\n        }\n\n        window.location.reload()\n\n    }\n\n  \n    return (\n        <div>\n            <Header />\n            <div>\n            \n            <h2 className='flex justify-center font-bold uppercase'>Task Board</h2>\n            <div className='flex flex-wrap justify-center mt-10 gap-4'>\n\n           \n            {user.tasks.filter(task => task.status.toLowerCase() !== \"done\").map(task => (\n            <div className=\"max-w-sm p-6 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 mb-3\" key={task.id}>\n            \n            <h5 className=\"mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white\">{task.title}</h5>\n       \n            <p className=\"mb-3 font-normal text-gray-700 dark:text-gray-400\">{task.description}.</p>\n            <p className=\"mb-3 font-normal text-gray-700 dark:text-gray-400\">{task.due_date}.</p>\n            <p className=\"mb-3 font-normal text-gray-700 dark:text-gray-400\">{task.status}.</p>\n            <div className='flex justify-between'>\n\n            <button className=\"focus:outline-none text-white bg-purple-700 hover:bg-purple-800 focus:ring-4 focus:ring-purple-300 font-medium rounded-lg text-sm px-5 py-2.5 mb-2 dark:bg-purple-600 dark:hover:bg-purple-700 dark:focus:ring-purple-900\" onClick={() => UpdateTask(task.id, task.title, task.description, task.due_date, \"In progress\")}>\n                In Progress\n                \n            </button>\n            <button  className=\"focus:outline-none text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800\" onClick={() => UpdateTask(task.id, task.title, task.description, task.due_date,\"Done\")}>\n                Done\n            </button>\n            </div>\n        </div>\n\n\n            ))}\n\n            </div>\n\n            <h2 className='flex justify-center font-bold uppercase'>Completed Tasks</h2>\n            <div className='flex flex-wrap justify-center mt-10 gap-4'>\n            \n            \n            {user.tasks.filter(task => task.status.toLowerCase() === \"done\").map(task => (\n            <div className=\"max-w-sm p-6 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 mb-3\" key={task.id}>\n            \n            <h5 className=\"mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white\">{task.title}</h5>\n       \n            <p className=\"mb-3 font-normal text-gray-700 dark:text-gray-400\">{task.description}.</p>\n            <p className=\"mb-3 font-normal text-gray-700 dark:text-gray-400\">{task.due_date}.</p>\n            <p className=\"mb-3 font-normal text-gray-700 dark:text-gray-400\">{task.status}.</p>\n            <div className='flex justify-between'>\n\n            <button className=\"focus:outline-none text-white bg-purple-700 hover:bg-purple-800 focus:ring-4 focus:ring-purple-300 font-medium rounded-lg text-sm px-5 py-2.5 mb-2 dark:bg-purple-600 dark:hover:bg-purple-700 dark:focus:ring-purple-900\" onClick={() => UpdateTask(task.id, task.title, task.description, task.due_date, \"In progress\")}>\n                In Progress\n                \n            </button>\n            <button  className=\"focus:outline-none text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800\" onClick={() => UpdateTask(task.id, task.title, task.description, task.due_date,\"Done\")}>\n                Done\n            </button>\n            </div>\n        </div>\n\n\n            ))}\n\n\n        </div>\n\n           \n        </div>\n        \n        </div>\n    );\n    };\n\nexport default Dashboard;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,UAAU,KAAQ,OAAO,CAC9D,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,MAAM,KAAM,UAAU,CAE7B,OAASC,WAAW,KAAQ,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGxD,KAAM,CAAAC,SAAmB,CAAGA,CAAA,GAAM,CAC9B,KAAM,CAACC,QAAQ,CAAC,CAAGT,UAAU,CAACG,WAAW,CAAC,CAC1C,KAAM,CAACO,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAkB,IAAI,CAAC,CACvD,KAAM,CAACc,OAAO,CAAEC,UAAU,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACgB,KAAK,CAAEC,QAAQ,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAEtCC,SAAS,CAAC,IAAM,CAEZ,KAAM,CAAAiB,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACjCH,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACA,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAhB,KAAK,CAACiB,GAAG,WAAAC,MAAA,CAAqBV,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAEW,EAAE,CAAE,CAAC,CACpET,OAAO,CAACM,QAAQ,CAACI,IAAI,CAAC,CAAE;AAC5B,CAAE,MAAOP,KAAK,CAAE,CACZC,QAAQ,CAAC,6BAA6B,CAAC,CAC3C,CAAC,OAAS,CACNF,UAAU,CAAC,KAAK,CAAC,CACrB,CACJ,CAAC,CAEDG,gBAAgB,CAAC,CAAC,CAItB,CAAC,CAAC,EAAE,CAAC,CAEL,GAAIJ,OAAO,CAAE,mBAAOP,IAAA,MAAAiB,QAAA,CAAG,YAAU,CAAG,CAAC,CACrC,GAAIR,KAAK,CAAE,mBAAOT,IAAA,MAAAiB,QAAA,CAAIR,KAAK,CAAI,CAAC,CAEhC,GAAI,CAACJ,IAAI,CAAE,mBAAOL,IAAA,MAAAiB,QAAA,CAAG,gBAAc,CAAG,CAAC,CAAE;AAGzC,KAAM,CAAAC,UAAU,CAAG,KAAAA,CAAOH,EAAU,CAAEI,KAAa,CAAEC,WAAmB,CAAEC,QAAgB,CAAEC,MAAc,GAAK,CAE3G;AACA,KAAM,CAAAC,WAAiC,CAAG,CACtCJ,KAAK,CAAEA,KAAK,CACZC,WAAW,CAAEA,WAAW,CACxBC,QAAQ,CAAEA,QAAQ,CAClBC,MAAM,CAAEA,MAAM,CACdE,OAAO,CAAEpB,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAEW,EACvB,CAAC,CAEDU,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC,CAExB,GAAI,CACAE,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEH,WAAW,CAAC,CAAE;AAC9C,KAAM,CAAA3B,KAAK,CAAC+B,KAAK,WAAAb,MAAA,CAAWC,EAAE,EAAIQ,WAAW,CAAC,CAC9CE,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CACxC;AACJ,CAAE,MAAOjB,KAAU,CAAE,CACjBgB,OAAO,CAAChB,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5C,GAAIA,KAAK,CAACG,QAAQ,CAAE,CAChBa,OAAO,CAAChB,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAACG,QAAQ,CAACI,IAAI,CAAC,CACpDS,OAAO,CAAChB,KAAK,CAAC,kBAAkB,CAAEA,KAAK,CAACG,QAAQ,CAACU,MAAM,CAAC,CACxDG,OAAO,CAAChB,KAAK,CAAC,mBAAmB,CAAEA,KAAK,CAACG,QAAQ,CAACgB,OAAO,CAAC,CAC1DlB,QAAQ,yBAAAI,MAAA,CAAyBL,KAAK,CAACG,QAAQ,CAACI,IAAI,CAACa,OAAO,EAAI,aAAa,CAAE,CAAC,CACpF,CAAC,IAAM,CACHnB,QAAQ,CAAC,qBAAqB,CAAC,CACnC,CACJ,CAAC,OAAS,CACNF,UAAU,CAAC,KAAK,CAAC,CACrB,CAEAsB,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAE5B,CAAC,CAGD,mBACI9B,KAAA,QAAAe,QAAA,eACIjB,IAAA,CAACH,MAAM,GAAE,CAAC,cACVK,KAAA,QAAAe,QAAA,eAEAjB,IAAA,OAAIiC,SAAS,CAAC,yCAAyC,CAAAhB,QAAA,CAAC,YAAU,CAAI,CAAC,cACvEjB,IAAA,QAAKiC,SAAS,CAAC,2CAA2C,CAAAhB,QAAA,CAGzDZ,IAAI,CAAC6B,KAAK,CAACC,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACd,MAAM,CAACe,WAAW,CAAC,CAAC,GAAK,MAAM,CAAC,CAACC,GAAG,CAACF,IAAI,eACzElC,KAAA,QAAK+B,SAAS,CAAC,2GAA2G,CAAAhB,QAAA,eAE1HjB,IAAA,OAAIiC,SAAS,CAAC,sEAAsE,CAAAhB,QAAA,CAAEmB,IAAI,CAACjB,KAAK,CAAK,CAAC,cAEtGjB,KAAA,MAAG+B,SAAS,CAAC,mDAAmD,CAAAhB,QAAA,EAAEmB,IAAI,CAAChB,WAAW,CAAC,GAAC,EAAG,CAAC,cACxFlB,KAAA,MAAG+B,SAAS,CAAC,mDAAmD,CAAAhB,QAAA,EAAEmB,IAAI,CAACf,QAAQ,CAAC,GAAC,EAAG,CAAC,cACrFnB,KAAA,MAAG+B,SAAS,CAAC,mDAAmD,CAAAhB,QAAA,EAAEmB,IAAI,CAACd,MAAM,CAAC,GAAC,EAAG,CAAC,cACnFpB,KAAA,QAAK+B,SAAS,CAAC,sBAAsB,CAAAhB,QAAA,eAErCjB,IAAA,WAAQiC,SAAS,CAAC,2NAA2N,CAACM,OAAO,CAAEA,CAAA,GAAMrB,UAAU,CAACkB,IAAI,CAACrB,EAAE,CAAEqB,IAAI,CAACjB,KAAK,CAAEiB,IAAI,CAAChB,WAAW,CAAEgB,IAAI,CAACf,QAAQ,CAAE,aAAa,CAAE,CAAAJ,QAAA,CAAC,aAG9U,CAAQ,CAAC,cACTjB,IAAA,WAASiC,SAAS,CAAC,0NAA0N,CAACM,OAAO,CAAEA,CAAA,GAAMrB,UAAU,CAACkB,IAAI,CAACrB,EAAE,CAAEqB,IAAI,CAACjB,KAAK,CAAEiB,IAAI,CAAChB,WAAW,CAAEgB,IAAI,CAACf,QAAQ,CAAC,MAAM,CAAE,CAAAJ,QAAA,CAAC,MAEtU,CAAQ,CAAC,EACJ,CAAC,GAhB0HmB,IAAI,CAACrB,EAiBpI,CAGA,CAAC,CAEG,CAAC,cAENf,IAAA,OAAIiC,SAAS,CAAC,yCAAyC,CAAAhB,QAAA,CAAC,iBAAe,CAAI,CAAC,cAC5EjB,IAAA,QAAKiC,SAAS,CAAC,2CAA2C,CAAAhB,QAAA,CAGzDZ,IAAI,CAAC6B,KAAK,CAACC,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACd,MAAM,CAACe,WAAW,CAAC,CAAC,GAAK,MAAM,CAAC,CAACC,GAAG,CAACF,IAAI,eACzElC,KAAA,QAAK+B,SAAS,CAAC,2GAA2G,CAAAhB,QAAA,eAE1HjB,IAAA,OAAIiC,SAAS,CAAC,sEAAsE,CAAAhB,QAAA,CAAEmB,IAAI,CAACjB,KAAK,CAAK,CAAC,cAEtGjB,KAAA,MAAG+B,SAAS,CAAC,mDAAmD,CAAAhB,QAAA,EAAEmB,IAAI,CAAChB,WAAW,CAAC,GAAC,EAAG,CAAC,cACxFlB,KAAA,MAAG+B,SAAS,CAAC,mDAAmD,CAAAhB,QAAA,EAAEmB,IAAI,CAACf,QAAQ,CAAC,GAAC,EAAG,CAAC,cACrFnB,KAAA,MAAG+B,SAAS,CAAC,mDAAmD,CAAAhB,QAAA,EAAEmB,IAAI,CAACd,MAAM,CAAC,GAAC,EAAG,CAAC,cACnFpB,KAAA,QAAK+B,SAAS,CAAC,sBAAsB,CAAAhB,QAAA,eAErCjB,IAAA,WAAQiC,SAAS,CAAC,2NAA2N,CAACM,OAAO,CAAEA,CAAA,GAAMrB,UAAU,CAACkB,IAAI,CAACrB,EAAE,CAAEqB,IAAI,CAACjB,KAAK,CAAEiB,IAAI,CAAChB,WAAW,CAAEgB,IAAI,CAACf,QAAQ,CAAE,aAAa,CAAE,CAAAJ,QAAA,CAAC,aAG9U,CAAQ,CAAC,cACTjB,IAAA,WAASiC,SAAS,CAAC,0NAA0N,CAACM,OAAO,CAAEA,CAAA,GAAMrB,UAAU,CAACkB,IAAI,CAACrB,EAAE,CAAEqB,IAAI,CAACjB,KAAK,CAAEiB,IAAI,CAAChB,WAAW,CAAEgB,IAAI,CAACf,QAAQ,CAAC,MAAM,CAAE,CAAAJ,QAAA,CAAC,MAEtU,CAAQ,CAAC,EACJ,CAAC,GAhB0HmB,IAAI,CAACrB,EAiBpI,CAGA,CAAC,CAGD,CAAC,EAGD,CAAC,EAED,CAAC,CAEV,CAAC,CAEL,cAAe,CAAAZ,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}