{"ast":null,"code":"var _jsxFileName = \"/home/ngare/Development/code/User-System/my-app/src/navigation/AppStack.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport CreateTaskForm from '../components/CreateTasks';\nimport AddDepartment from '../components/AddDepartment';\nimport Dashboard from '../components/Dashboard';\nimport ManagerDashboard from '../components/ManagerDashBoard';\nimport { AuthContext } from '../context/Authentication';\nimport UpdateUserForm from '../components/UpdateUser';\nimport axios from 'axios';\nimport UpdateDepartmentForm from '../components/UpdateDepartment';\nimport UpdateTaskForm from '../components/UpdateTasks';\nimport UserForm from '../components/AddUsers';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const {\n    userData\n  } = useContext(AuthContext);\n  const [departments, setDepartments] = useState([]);\n  useEffect(() => {\n    const fetchDepartments = async () => {\n      try {\n        const response = await axios.get(\"/departments\");\n        setDepartments(response.data);\n      } catch (err) {\n        console.error('Error fetching employees');\n      }\n    };\n    fetchDepartments();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: userData ? /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/manager-dashboard\",\n        element: userData ? /*#__PURE__*/_jsxDEV(ManagerDashboard, {\n          departments: departments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 83\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/manager-departments\",\n        element: /*#__PURE__*/_jsxDEV(AddDepartment, {\n          departments: departments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/manager-users\",\n        element: /*#__PURE__*/_jsxDEV(UserForm, {\n          departments: departments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/manager-tasks\",\n        element: /*#__PURE__*/_jsxDEV(CreateTaskForm, {\n          departments: departments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/update user/:id\",\n        element: /*#__PURE__*/_jsxDEV(UpdateUserForm, {\n          departments: departments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/update department/:id\",\n        element: /*#__PURE__*/_jsxDEV(UpdateDepartmentForm, {\n          departments: departments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 61\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/update tasks/:id\",\n        element: /*#__PURE__*/_jsxDEV(UpdateTaskForm, {\n          departments: departments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"FJDrpf6GWIKrL9g33ayPpWyJ6do=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Route","Routes","CreateTaskForm","AddDepartment","Dashboard","ManagerDashboard","AuthContext","UpdateUserForm","axios","UpdateDepartmentForm","UpdateTaskForm","UserForm","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","userData","departments","setDepartments","fetchDepartments","response","get","data","err","console","error","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ngare/Development/code/User-System/my-app/src/navigation/AppStack.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState} from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport CreateTaskForm from '../components/CreateTasks';\nimport AddDepartment from '../components/AddDepartment';\nimport Dashboard from '../components/Dashboard';\nimport ManagerDashboard from '../components/ManagerDashBoard';\nimport { AuthContext } from '../context/Authentication';\nimport UpdateUserForm from '../components/UpdateUser';\nimport { Department } from '../types';\nimport axios from 'axios';\nimport UpdateDepartmentForm from '../components/UpdateDepartment';\nimport UpdateTaskForm from '../components/UpdateTasks';\nimport UserForm from '../components/AddUsers';\n\n\nconst App: React.FC = () => {\n    const {userData} = useContext(AuthContext)\n    const [departments, setDepartments] = useState<Department[]>([]);\n    \n\n  useEffect(() => {\n\n    const fetchDepartments = async () => {\n        \n        try {\n          const response = await axios.get<Department[]>(\"/departments\");\n          setDepartments(response.data);\n        } catch (err) {\n          console.error('Error fetching employees');\n        } \n      };\n\n    fetchDepartments();\n  }, []);\n  \n  return (\n    <>           \n        <Routes>\n          <Route\n            path=\"/dashboard\"\n            element={userData ? <Dashboard /> : <p>Loading...</p>}\n          />\n          <Route\n            path=\"/manager-dashboard\"\n            element={userData ? <ManagerDashboard departments = {departments}/> : <p>Loading...</p>}\n          />\n         \n            <Route path=\"/manager-departments\" element = {<AddDepartment departments = {departments}/>}></Route>\n            <Route path=\"/manager-users\" element = {<UserForm departments = {departments} />}></Route>\n            <Route path=\"/manager-tasks\" element = {<CreateTaskForm departments = {departments}/>}></Route>\n            <Route path=\"/update user/:id\" element = {<UpdateUserForm departments = {departments}/>} ></Route>\n            <Route path=\"/update department/:id\" element = {<UpdateDepartmentForm departments = {departments}/>} ></Route>\n            <Route path=\"/update tasks/:id\" element = {<UpdateTaskForm departments = {departments}/>} ></Route>\n    \n          \n        </Routes>\n\n        </>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}